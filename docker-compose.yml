version: "3.9"
services:
  flask_server:
    container_name: flask_server
    build: ./flask_server
    ports:
      - "8000:5000"
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"
    networks:
      - app-network

  #PHP Service
  laravel_server:
    build:
      context: ./laravel_server
    container_name: laravel_server
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/laravel_server
    # volumes:
      # - ./laravel_server:/var/www/laravel_server
      # - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Wordpress
  wordpress:
    image: wordpress
    container_name: wordpress
    # restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: ${DB_USERNAME}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WP_DATABASE}
    # environment:
    #   SERVICE_NAME: app
    #   SERVICE_TAGS: dev
    # working_dir: /var/www/wordpress
    # volumes:
    #   - ./laravel_server:/var/www/wordpress
    #   - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  # webserver:
  #   image: nginx:alpine
  #   container_name: webserver
  #   restart: unless-stopped
  #   tty: true
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./laravel_server:/var/www/laravel_server
  #     - ./wordpress:/var/www/wordpress
  #     - ./nginx/conf.d/:/etc/nginx/conf.d/
  #   networks:
  #     - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local